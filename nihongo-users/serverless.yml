service: "nihongo-users"
custom:
  tableName: "users-table-${self:provider.stage}"

provider:
  name: "aws"
  runtime: "nodejs10.x"
  stage: "dev"
  region: "eu-west-1"

functions:
  registerUser:
    handler: api/userHandler.registerUser
    events:
      - http:
          method: POST
          path: /register
          private: false
  authenticateUser:
    handler: api/userHandler.authenticateUser
    events:
      - http:
          method: POST
          path: /authenticate
          private: false
  getUser:
    handler: api/userHandler.getUser
    events:
      - http:
          method: GET
          path: /getUser/{email}
          private: false
  getAllUsers:
    handler: api/userHandler.getAllUsers
    events:
      - http:
          method: GET
          path: /getAllUsers
          private: false
  deleteUser:
    handler: api/userHandler.deleteUser
    events:
      - http:
          method: DELETE
          path: /deleteUser
          private: false

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
            # the primary can be just the partition key, i.e. the HASH key, or a combination of HASH and RANGE (partition and)
          - AttributeName: email
            KeyType: RANGE
            # RANGE = sort key
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        #GlobalSecondaryIndexes:
        #  - IndexName: usersByEmail
        #    KeySchema:
        #      - AttributeName: email
        #        KeyType: Hash
        #    Projection:
        #      ProjectionType: ALL
        #    ProvisionedThroughput:
        #      ReadCapacityUnits: 5
        #      WriteCapacityUnits: 5
    usersTable2:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable2
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
